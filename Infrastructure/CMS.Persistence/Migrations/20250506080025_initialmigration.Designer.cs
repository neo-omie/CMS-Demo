// <auto-generated />
using System;
using CMS.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS.Persistence.Migrations
{
    [DbContext(typeof(CMSDbContext))]
    [Migration("20250506080025_initialmigration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMS.Application.Features.ApprovalMatrixContract.Queries.GetAllApprovalMatrixContract.GetAllApprovalMatrixContractDTO", b =>
                {
                    b.Property<string>("ApproverName1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverName2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverName3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MasterApprovalMatrixContractId")
                        .HasColumnType("int");

                    b.Property<int>("TotalRecords")
                        .HasColumnType("int");

                    b.ToTable("GetAllApprovalMatrixContractDTOs");
                });

            modelBuilder.Entity("CMS.Application.Features.ApprovalMatrixContract.Queries.GetApprovalMatrixContractById.GetApprovalMatrixContractByIdDto", b =>
                {
                    b.Property<string>("ApproverId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverId2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverId3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverName1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverName2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverName3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MasterApprovalMatrixContractId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.ToTable("GetApprovalMatrixContractByIdDtos");
                });

            modelBuilder.Entity("CMS.Application.Features.ApprovalMatrixMOU.Queries.GetAllApprovalMatrixMOU.GetAllApprovalMatrixMOUDto", b =>
                {
                    b.Property<string>("ApproverName1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverName2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverName3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MasterApprovalMatrixMOUId")
                        .HasColumnType("int");

                    b.Property<int>("TotalRecords")
                        .HasColumnType("int");

                    b.ToTable("GetAllApprovalMatrixMOUDtos");
                });

            modelBuilder.Entity("CMS.Application.Features.ApprovalMatrixMOU.Queries.GetAllApprovalMatrixMOUById.GetAllApprovalMatrixMOUByIdDto", b =>
                {
                    b.Property<string>("ApproverId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverId2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverId3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverName1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverName2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverName3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MasterApprovalMatrixMOUId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.ToTable("GetAllApprovalMatrixMOUByIdDtos");
                });

            modelBuilder.Entity("CMS.Application.Features.ClassifiedContracts.Queries.GetAllClassifiedContracts.GetAllClassifiedContractsDto", b =>
                {
                    b.Property<DateTime?>("AddendumDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalPendingFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassifiedContractID")
                        .HasColumnType("int");

                    b.Property<string>("ClassifiedContractName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RenewalContractPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RenewalDueIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToBeRenewedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalRecords")
                        .HasColumnType("int");

                    b.ToTable("GetClassifiedContractsDtos");
                });

            modelBuilder.Entity("CMS.Application.Features.ClassifiedContracts.Queries.GetClassifiedContractById.GetClassifiedContractByIdDto", b =>
                {
                    b.Property<int>("ActualDocRefNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AddendumDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApostilleTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ApostilleTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Approver1Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Approver1EmployeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Approver1Status")
                        .HasColumnType("int");

                    b.Property<string>("Approver2Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Approver2EmployeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Approver2Status")
                        .HasColumnType("int");

                    b.Property<string>("Approver3Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Approver3EmployeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Approver3Status")
                        .HasColumnType("int");

                    b.Property<int>("ClassifiedContractId")
                        .HasColumnType("int");

                    b.Property<string>("ClassifiedContractName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ContractTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContractWithCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ContractWithCompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpCustodianId")
                        .HasColumnType("int");

                    b.Property<string>("EmpCustodianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RenewalFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RenewalTill")
                        .HasColumnType("datetime2");

                    b.Property<int>("RetainerContract")
                        .HasColumnType("int");

                    b.Property<string>("TermsAndConditions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTill")
                        .HasColumnType("datetime2");

                    b.ToTable("GetClassifiedContractByIdDtos");
                });

            modelBuilder.Entity("CMS.Application.Features.Contracts.Queries.GetAllContracts.GetAllContractsDto", b =>
                {
                    b.Property<DateTime?>("AddendumDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalPendingFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContractID")
                        .HasColumnType("int");

                    b.Property<string>("ContractName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RenewalContractPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RenewalDueIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToBeRenewedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalRecords")
                        .HasColumnType("int");

                    b.ToTable("GetContractsDtos");
                });

            modelBuilder.Entity("CMS.Application.Features.Contracts.Queries.GetContractById.GetContractByIdDto", b =>
                {
                    b.Property<int>("ActualDocRefNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AddendumDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApostilleTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ApostilleTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Approver1Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Approver1EmployeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Approver1Status")
                        .HasColumnType("int");

                    b.Property<string>("Approver2Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Approver2EmployeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Approver2Status")
                        .HasColumnType("int");

                    b.Property<string>("Approver3Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Approver3EmployeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Approver3Status")
                        .HasColumnType("int");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<string>("ContractName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ContractTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContractWithCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ContractWithCompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpCustodianId")
                        .HasColumnType("int");

                    b.Property<string>("EmpCustodianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RenewalFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RenewalTill")
                        .HasColumnType("datetime2");

                    b.Property<int>("RetainerContract")
                        .HasColumnType("int");

                    b.Property<string>("TermsAndConditions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTill")
                        .HasColumnType("datetime2");

                    b.ToTable("GetContractByIdDtos");
                });

            modelBuilder.Entity("CMS.Application.Features.Departments.Queries.GetAllDepartments.GetAllDepartmentsDto", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalRecords")
                        .HasColumnType("int");

                    b.ToTable("GetDepartmentsDtos");
                });

            modelBuilder.Entity("CMS.Application.Features.EscalationMatrixMouMaster.EscalationMatrixMoutDto", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Escalation1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Escalation2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Escalation3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EscalationId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EscalationId2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EscalationId3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MatrixMouId")
                        .HasColumnType("int");

                    b.Property<int>("TriggerDaysEscalation1")
                        .HasColumnType("int");

                    b.Property<int>("TriggerDaysEscalation2")
                        .HasColumnType("int");

                    b.Property<int>("TriggerDaysEscalation3")
                        .HasColumnType("int");

                    b.Property<int>("totalRecords")
                        .HasColumnType("int");

                    b.ToTable("GetEscalationMatrixMouDtos");
                });

            modelBuilder.Entity("CMS.Application.Features.MasterApostilles.ApostilleDtos.GetAllApostilleDto", b =>
                {
                    b.Property<string>("ApostilleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TotalRecords")
                        .HasColumnType("int");

                    b.Property<int>("ValueId")
                        .HasColumnType("int");

                    b.ToTable("GetApostillesDtos");
                });

            modelBuilder.Entity("CMS.Application.Features.MasterCompanies.GetMastersDTO", b =>
                {
                    b.Property<string>("CompanyLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalRecords")
                        .HasColumnType("int");

                    b.Property<int>("ValueId")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.ToTable("GetCompanyDtos");
                });

            modelBuilder.Entity("CMS.Application.Features.MasterEscalationMatrixContracts.GetEscalationMatrixContractDto", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Escalation1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Escalation2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Escalation3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EscalationId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EscalationId2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EscalationId3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MatrixContractId")
                        .HasColumnType("int");

                    b.Property<int>("TriggerDaysEscalation1")
                        .HasColumnType("int");

                    b.Property<int>("TriggerDaysEscalation2")
                        .HasColumnType("int");

                    b.Property<int>("TriggerDaysEscalation3")
                        .HasColumnType("int");

                    b.ToTable("GetEscalationMatrixContractDtos");
                });

            modelBuilder.Entity("CMS.Domain.Entities.ClassifiedContract", b =>
                {
                    b.Property<int>("ClassifiedContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassifiedContractId"));

                    b.Property<int>("ActualDocRefNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AddendumDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApostilleTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Approver1Status")
                        .HasColumnType("int");

                    b.Property<int>("Approver2Status")
                        .HasColumnType("int");

                    b.Property<int>("Approver3Status")
                        .HasColumnType("int");

                    b.Property<string>("ClassifiedContractName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ContractWithCompanyId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmpCustodianId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RenewalFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RenewalTill")
                        .HasColumnType("datetime2");

                    b.Property<int>("RetainerContract")
                        .HasColumnType("int");

                    b.Property<string>("TermsAndConditions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTill")
                        .HasColumnType("datetime2");

                    b.HasKey("ClassifiedContractId");

                    b.HasIndex("ApostilleTypeId");

                    b.HasIndex("ContractTypeId");

                    b.HasIndex("ContractWithCompanyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmpCustodianId");

                    b.ToTable("ClassifiedContracts");
                });

            modelBuilder.Entity("CMS.Domain.Entities.CompanyMaster.ListOfCountries", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("Countries")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CMS.Domain.Entities.CompanyMaster.ListOfStates", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateId");

                    b.HasIndex("CountryId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("CMS.Domain.Entities.CompanyMaster.ListofCity", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("CMS.Domain.Entities.CompanyMaster.MasterCompany", b =>
                {
                    b.Property<int>("ValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ValueId"));

                    b.Property<long>("BankAccNo")
                        .HasColumnType("bigint");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyAddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddressLine3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyBankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CompanyContactNo")
                        .HasColumnType("bigint");

                    b.Property<string>("CompanyEmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("CompanyStatus")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyWebsiteUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<long>("GSTno")
                        .HasColumnType("bigint");

                    b.Property<string>("IFSCCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("MSMERegistrationNo")
                        .HasColumnType("bigint");

                    b.Property<string>("PanNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("PocContactNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("PocEmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PocName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<int>("Zipcode")
                        .HasColumnType("int");

                    b.HasKey("ValueId");

                    b.HasAlternateKey("BankAccNo");

                    b.HasAlternateKey("CompanyContactNo");

                    b.HasAlternateKey("CompanyEmailId");

                    b.HasAlternateKey("CompanyName");

                    b.HasAlternateKey("CompanyWebsiteUrl");

                    b.HasAlternateKey("GSTno");

                    b.HasAlternateKey("IFSCCode");

                    b.HasAlternateKey("MSMERegistrationNo");

                    b.HasAlternateKey("PanNo");

                    b.HasAlternateKey("PocEmailId");

                    b.HasIndex("CityId");

                    b.ToTable("MasterCompanies");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"));

                    b.Property<int>("ActualDocRefNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AddendumDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApostilleTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Approver1Status")
                        .HasColumnType("int");

                    b.Property<int>("Approver2Status")
                        .HasColumnType("int");

                    b.Property<int>("Approver3Status")
                        .HasColumnType("int");

                    b.Property<string>("ContractName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ContractWithCompanyId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmpCustodianId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RenewalFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RenewalTill")
                        .HasColumnType("datetime2");

                    b.Property<int>("RetainerContract")
                        .HasColumnType("int");

                    b.Property<string>("TermsAndConditions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTill")
                        .HasColumnType("datetime2");

                    b.HasKey("ContractId");

                    b.HasIndex("ApostilleTypeId");

                    b.HasIndex("ContractTypeId");

                    b.HasIndex("ContractWithCompanyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmpCustodianId");

                    b.ToTable("ContractsEntity");
                });

            modelBuilder.Entity("CMS.Domain.Entities.ContractTypeMasters", b =>
                {
                    b.Property<int>("ValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ValueId"));

                    b.Property<string>("ContractTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ValueId");

                    b.ToTable("contracts");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "Admin Support"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "IT"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "HR"
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentName = "Finance"
                        },
                        new
                        {
                            DepartmentId = 5,
                            DepartmentName = "Maintenance"
                        });
                });

            modelBuilder.Entity("CMS.Domain.Entities.MasterApostille", b =>
                {
                    b.Property<int>("ValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ValueId"));

                    b.Property<string>("ApostilleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ValueId");

                    b.ToTable("MasterApostilles");
                });

            modelBuilder.Entity("CMS.Domain.Entities.MasterApprovalMatrixContract", b =>
                {
                    b.Property<int>("MasterApprovalMatrixContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MasterApprovalMatrixContractId"));

                    b.Property<string>("ApproverId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApproverId2")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApproverId3")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.HasKey("MasterApprovalMatrixContractId");

                    b.HasIndex("ApproverId1");

                    b.HasIndex("ApproverId2");

                    b.HasIndex("ApproverId3");

                    b.ToTable("MasterApprovalMatrixContracts");
                });

            modelBuilder.Entity("CMS.Domain.Entities.MasterApprovalMatrixMOU", b =>
                {
                    b.Property<int>("MasterApprovalMatrixMOUId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MasterApprovalMatrixMOUId"));

                    b.Property<string>("ApproverId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApproverId2")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApproverId3")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.HasKey("MasterApprovalMatrixMOUId");

                    b.HasAlternateKey("DepartmentId");

                    b.HasIndex("ApproverId1");

                    b.HasIndex("ApproverId2");

                    b.HasIndex("ApproverId3");

                    b.ToTable("MasterApprovalMatrixMOUs");
                });

            modelBuilder.Entity("CMS.Domain.Entities.MasterDocument", b =>
                {
                    b.Property<int>("ValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ValueId"));

                    b.Property<byte[]>("DocumentData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("ValueId");

                    b.ToTable("MasterDocuments");
                });

            modelBuilder.Entity("CMS.Domain.Entities.MasterEmployee", b =>
                {
                    b.Property<int>("ValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ValueId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EmployeeMobile")
                        .HasColumnType("bigint");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastPasswordChanged")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ValueId");

                    b.ToTable("MasterEmployees");

                    b.HasData(
                        new
                        {
                            ValueId = 1,
                            DepartmentId = 1,
                            Email = "admin@cms.com",
                            EmployeeCode = "NEO1",
                            EmployeeExtension = "Main person",
                            EmployeeMobile = 7777766666L,
                            EmployeeName = "Admin",
                            IsDeleted = false,
                            LastPasswordChanged = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "AQAAAAIAAYagAAAAEI4nOXeB17L+4UKbjfeLQBEW4kUfRi6LUNRcqRjOQrlF1rdRMTs6ZPdX2ZDZ0vSLtg==",
                            Role = "Admin",
                            Unit = "Thane"
                        },
                        new
                        {
                            ValueId = 2,
                            DepartmentId = 2,
                            Email = "sarthak@neosoft.com",
                            EmployeeCode = "NEO2",
                            EmployeeExtension = "IT Smart",
                            EmployeeMobile = 9999988888L,
                            EmployeeName = "Sarthak Lembhe",
                            IsDeleted = false,
                            LastPasswordChanged = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "AQAAAAIAAYagAAAAECTnQw+YusPhXURBMFTTV2tKNpgSt6fk1nkt7twNXbmdnwR/iEeIlsEM8AWzAzcdTQ==",
                            Role = "MOU_User",
                            Unit = "Thane"
                        });
                });

            modelBuilder.Entity("CMS.Domain.Entities.MasterEscalationMatrixContract", b =>
                {
                    b.Property<int>("MatrixContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatrixContractId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EscalationId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EscalationId2")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EscalationId3")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TriggerDaysEscalation1")
                        .HasColumnType("int");

                    b.Property<int>("TriggerDaysEscalation2")
                        .HasColumnType("int");

                    b.Property<int>("TriggerDaysEscalation3")
                        .HasColumnType("int");

                    b.HasKey("MatrixContractId");

                    b.HasAlternateKey("DepartmentId");

                    b.HasIndex("EscalationId1");

                    b.HasIndex("EscalationId2");

                    b.HasIndex("EscalationId3");

                    b.ToTable("MasterEscalationMatrixContracts");
                });

            modelBuilder.Entity("CMS.Domain.Entities.MasterEscalationMatrixMou", b =>
                {
                    b.Property<int>("MatrixMouId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatrixMouId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EscalationId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EscalationId2")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EscalationId3")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TriggerDaysEscalation1")
                        .HasColumnType("int");

                    b.Property<int>("TriggerDaysEscalation2")
                        .HasColumnType("int");

                    b.Property<int>("TriggerDaysEscalation3")
                        .HasColumnType("int");

                    b.HasKey("MatrixMouId");

                    b.HasAlternateKey("DepartmentId");

                    b.HasIndex("EscalationId1");

                    b.HasIndex("EscalationId2");

                    b.HasIndex("EscalationId3");

                    b.ToTable("MasterEscalationMatrixMous");
                });

            modelBuilder.Entity("CMS.Domain.Entities.ClassifiedContract", b =>
                {
                    b.HasOne("CMS.Domain.Entities.MasterApostille", "ApostilleType")
                        .WithMany()
                        .HasForeignKey("ApostilleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.ContractTypeMasters", "ContractType")
                        .WithMany()
                        .HasForeignKey("ContractTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.CompanyMaster.MasterCompany", "ContractWithCompany")
                        .WithMany()
                        .HasForeignKey("ContractWithCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.MasterApprovalMatrixContract", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.MasterEmployee", "EmpCustodian")
                        .WithMany()
                        .HasForeignKey("EmpCustodianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApostilleType");

                    b.Navigation("ContractType");

                    b.Navigation("ContractWithCompany");

                    b.Navigation("Department");

                    b.Navigation("EmpCustodian");
                });

            modelBuilder.Entity("CMS.Domain.Entities.CompanyMaster.ListOfStates", b =>
                {
                    b.HasOne("CMS.Domain.Entities.CompanyMaster.ListOfCountries", "listofcountries")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("listofcountries");
                });

            modelBuilder.Entity("CMS.Domain.Entities.CompanyMaster.ListofCity", b =>
                {
                    b.HasOne("CMS.Domain.Entities.CompanyMaster.ListOfStates", "listofStates")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("listofStates");
                });

            modelBuilder.Entity("CMS.Domain.Entities.CompanyMaster.MasterCompany", b =>
                {
                    b.HasOne("CMS.Domain.Entities.CompanyMaster.ListofCity", "city")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("city");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Contract", b =>
                {
                    b.HasOne("CMS.Domain.Entities.MasterApostille", "ApostilleType")
                        .WithMany()
                        .HasForeignKey("ApostilleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.ContractTypeMasters", "ContractType")
                        .WithMany()
                        .HasForeignKey("ContractTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.CompanyMaster.MasterCompany", "ContractWithCompany")
                        .WithMany()
                        .HasForeignKey("ContractWithCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.MasterApprovalMatrixContract", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .HasPrincipalKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.MasterEmployee", "EmpCustodian")
                        .WithMany()
                        .HasForeignKey("EmpCustodianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApostilleType");

                    b.Navigation("ContractType");

                    b.Navigation("ContractWithCompany");

                    b.Navigation("Department");

                    b.Navigation("EmpCustodian");
                });

            modelBuilder.Entity("CMS.Domain.Entities.MasterApprovalMatrixContract", b =>
                {
                    b.HasOne("CMS.Domain.Entities.MasterEmployee", "Approver1")
                        .WithMany()
                        .HasForeignKey("ApproverId1")
                        .HasPrincipalKey("EmployeeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.MasterEmployee", "Approver2")
                        .WithMany()
                        .HasForeignKey("ApproverId2")
                        .HasPrincipalKey("EmployeeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.MasterEmployee", "Approver3")
                        .WithMany()
                        .HasForeignKey("ApproverId3")
                        .HasPrincipalKey("EmployeeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Approver1");

                    b.Navigation("Approver2");

                    b.Navigation("Approver3");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CMS.Domain.Entities.MasterApprovalMatrixMOU", b =>
                {
                    b.HasOne("CMS.Domain.Entities.MasterEmployee", "Approver1")
                        .WithMany()
                        .HasForeignKey("ApproverId1")
                        .HasPrincipalKey("EmployeeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.MasterEmployee", "Approver2")
                        .WithMany()
                        .HasForeignKey("ApproverId2")
                        .HasPrincipalKey("EmployeeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.MasterEmployee", "Approver3")
                        .WithMany()
                        .HasForeignKey("ApproverId3")
                        .HasPrincipalKey("EmployeeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Approver1");

                    b.Navigation("Approver2");

                    b.Navigation("Approver3");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CMS.Domain.Entities.MasterEscalationMatrixContract", b =>
                {
                    b.HasOne("CMS.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.MasterEmployee", "Escalation1")
                        .WithMany()
                        .HasForeignKey("EscalationId1")
                        .HasPrincipalKey("EmployeeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.MasterEmployee", "Escalation2")
                        .WithMany()
                        .HasForeignKey("EscalationId2")
                        .HasPrincipalKey("EmployeeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.MasterEmployee", "Escalation3")
                        .WithMany()
                        .HasForeignKey("EscalationId3")
                        .HasPrincipalKey("EmployeeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Escalation1");

                    b.Navigation("Escalation2");

                    b.Navigation("Escalation3");
                });

            modelBuilder.Entity("CMS.Domain.Entities.MasterEscalationMatrixMou", b =>
                {
                    b.HasOne("CMS.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.MasterEmployee", "Escalation1")
                        .WithMany()
                        .HasForeignKey("EscalationId1")
                        .HasPrincipalKey("EmployeeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.MasterEmployee", "Escalation2")
                        .WithMany()
                        .HasForeignKey("EscalationId2")
                        .HasPrincipalKey("EmployeeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.MasterEmployee", "Escalation3")
                        .WithMany()
                        .HasForeignKey("EscalationId3")
                        .HasPrincipalKey("EmployeeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Escalation1");

                    b.Navigation("Escalation2");

                    b.Navigation("Escalation3");
                });
#pragma warning restore 612, 618
        }
    }
}
